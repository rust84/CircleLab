version: 2.1

parameters:
  region:
    type: string
    default: eu-west-1
  profile-name:
    type: string
    default: default
  role-arn:
    type: string
    default: "arn:aws:iam::446168904202:role/terraform-backend"
  session-name:
    type: string
    default: circleci-session
  session-duration:
    type: string
    default: "300"

orbs:
  aws-cli: circleci/aws-cli@4.1.2

executors:
  terraform:
    docker:
      - image: public.ecr.aws/hashicorp/terraform:1.6

jobs:
  aws-setup:
    environment:
      AWS_CONFIG_FILE: /home/circleci/.aws/config
      AWS_SHARED_CREDENTIALS_FILE: /home/circleci/.aws/credentials
    resource_class: small
    docker:
      - image: cimg/aws:2023.06
    steps:
      - checkout
      - aws-cli/setup:
          profile_name: << pipeline.parameters.profile-name >>
          role_arn: << pipeline.parameters.role-arn >>
          # optional
          role_session_name: << pipeline.parameters.session-name >>
          region: << pipeline.parameters.region >>
      - run:
          name: get-caller-identity
          command: |
            aws sts get-caller-identity --profile << pipeline.parameters.profile-name >>
      - persist_to_workspace:
          root: .
          paths:
            - .
      - save_cache:
          key: v1-aws-{{ .Branch }}-{{ epoch }}
          paths:
            - /home/circleci/.aws
  plan-apply:
    environment:
      AWS_CONFIG_FILE: /home/circleci/.aws/config
      AWS_SHARED_CREDENTIALS_FILE: /home/circleci/.aws/credentials
    resource_class: small
    working_directory: /tmp/project
    executor: terraform
    steps:
      - attach_workspace:
          at: .
      - checkout
      - restore_cache:
          keys:
          - v1-aws-{{ .Branch }}-
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    environment:
      AWS_CONFIG_FILE: /home/circleci/.aws/config
      AWS_SHARED_CREDENTIALS_FILE: /home/circleci/.aws/credentials
    resource_class: small
    working_directory: /tmp/project
    executor: terraform
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
          - v1-aws-{{ .Branch }}-
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy:
    environment:
      AWS_CONFIG_FILE: /home/circleci/.aws/config
      AWS_SHARED_CREDENTIALS_FILE: /home/circleci/.aws/credentials
    executor: terraform
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
          - v1-aws-{{ .Branch }}-
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .
  destroy:
    environment:
      AWS_CONFIG_FILE: /home/circleci/.aws/config
      AWS_SHARED_CREDENTIALS_FILE: /home/circleci/.aws/credentials
    executor: terraform
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
          - v1-aws-{{ .Branch }}-
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  plan_approve_apply:
    jobs:
      - aws-setup:
          context: aws
      - plan-apply:
          requires:
            - aws-setup
          filters:
            tags:
              only: /.*/
      - hold-apply:
          type: approval
          requires:
            - plan-apply
          filters:
            tags:
              only: /.*/          
      - apply:
          requires:
            - hold-apply
          filters:
            tags:
              only: /.*/   
      - plan-destroy:
          requires:
            - apply
          filters:
            tags:
              only: /.*/
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
          filters:
            tags:
              only: /.*/
      - destroy:
          requires:
            - hold-destroy
          filters:
            tags:
              only: /.*/